version: "3.5"
networks:
  default:
    name: tohma-explorer

services:
  backend:
    container_name: backend
    image: blockscout/blockscout-optimism:${DOCKER_TAG_BACKEND:-latest}
    command: sh -c "bin/blockscout eval \"Elixir.Explorer.ReleaseTasks.create_and_migrate()\" && bin/blockscout start"
    pull_policy: always
    restart: always
    stop_grace_period: 5m
    env_file:
      - ./envs/common-blockscout.env
    ports:
      - 4001:4000
    environment:
      - NETWORK=Ethereum
      - SUBNETWORK=Tohma
      - ETHEREUM_JSONRPC_HTTP_URL=${L2_RPC_URL}
      - ETHEREUM_JSONRPC_TRACE_URL=${L2_RPC_URL}
      - INDEXER_OPTIMISM_L1_RPC=${L1_RPC_URL}
      - INDEXER_OPTIMISM_L1_SYSTEM_CONFIG_CONTRACT=${L1_SYSTEM_CONFIG_CONTRACT}
      - INDEXER_OPTIMISM_L2_MESSAGE_PASSER_CONTRACT=${L2_MESSAGE_PASSER_CONTRACT}
      - INDEXER_DISABLE_BEACON_BLOB_FETCHER=true
      - INDEXER_BEACON_BLOB_FETCHER_REFERENCE_SLOT=${L2_BEACON_BLOB_FETCHER_REFERENCE_SLOT}
      - INDEXER_BEACON_BLOB_FETCHER_REFERENCE_TIMESTAMP=${L2_BEACON_BLOB_FETCHER_REFERENCE_TIMESTAMP}
      - INDEXER_BEACON_BLOB_FETCHER_SLOT_DURATION=${L2_BEACON_BLOB_FETCHER_SLOT_DURATION}
      - DATABASE_URL=postgresql://${EXPLORER_DB_USER}:${EXPLORER_DB_PASSWORD}@backend-db:5432/${EXPLORER_DB_NAME}
      - SECRET_KEY_BASE=${SECRET_KEY_BASE}
      - MIX_ENV=prod
      - CHAIN_TYPE=optimism
      - CACHE_BLOCK_COUNT_PERIOD=5s

  backend-db:
    container_name: backend-db
    image: postgres:15
    ports:
      - 5437:5432
    environment:
      - POSTGRES_USER=${EXPLORER_DB_USER}
      - POSTGRES_PASSWORD=${EXPLORER_DB_PASSWORD}
      - POSTGRES_DB=${EXPLORER_DB_NAME}
    volumes:
      - backend_db_data:/var/lib/postgresql/data
    command: ["postgres", "-N", "500"]

  frontend:
    container_name: frontend
    image: ghcr.io/blockscout/frontend:${DOCKER_TAG_FRONTEND:-latest}
    pull_policy: always
    restart: always
    platform: linux/amd64
    env_file:
      - ./envs/common-frontend.env
    environment:
      - NEXT_PUBLIC_APP_PORT=3001
      - NEXT_PUBLIC_NETWORK_NAME=Tohma
      - NEXT_PUBLIC_NETWORK_SHORT_NAME=Tohma
      - NEXT_PUBLIC_NETWORK_ID=1001
      - NEXT_PUBLIC_NETWORK_RPC_URL=http://${COMMON_HOST}:8123
      - NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID=${WALLET_CONNECT_PROJECT_ID}
      # TODO: should not use the main branch
      - NEXT_PUBLIC_NETWORK_LOGO=https://raw.githubusercontent.com/blockscout/frontend-configs/main/configs/network-logos/optimism.svg
      - NEXT_PUBLIC_NETWORK_ICON=https://raw.githubusercontent.com/blockscout/frontend-configs/main/configs/network-icons/optimism-short.svg
      - NEXT_PUBLIC_HOMEPAGE_PLATE_BACKGROUND=linear-gradient(122deg, rgba(255, 4, 33, 1) 0%, rgba(237, 21, 65, 1) 100%)
      - NEXT_PUBLIC_HOMEPAGE_PLATE_TEXT_COLOR=rgba(255, 255, 255, 1)
      - NEXT_PUBLIC_STATS_API_HOST=http://${COMMON_HOST}:8084
    ports:
      - 3001:3000

  stats-db:
    depends_on:
      - backend
    container_name: stats-db
    image: postgres:15
    restart: always
    command: postgres -c 'max_connections=200'
    environment:
      - POSTGRES_USER=${STATS_DB_USER}
      - POSTGRES_PASSWORD=${STATS_DB_PASSWORD}
      - POSTGRES_DB=${STATS_DB_NAME}
    ports:
      - 7434:5432
    volumes:
      - stats_db_data:/var/lib/postgresql/data

  stats:
    depends_on:
      - stats-db
    container_name: stats
    image: ghcr.io/blockscout/stats:${DOCKER_TAG_STATS:-latest}
    pull_policy: always
    platform: linux/amd64
    restart: always
    env_file:
      - ./envs/common-stats.env
    ports:
      - 8154:8050
    environment:
      - STATS__CREATE_DATABASE=true
      - STATS__RUN_MIGRATIONS=true
      - STATS__DB_URL=postgresql://${STATS_DB_USER}:${STATS_DB_PASSWORD}@stats-db:5432/${STATS_DB_NAME}
      - STATS__BLOCKSCOUT_DB_URL=postgresql://${EXPLORER_DB_USER}:${EXPLORER_DB_PASSWORD}@backend-db:5432/${EXPLORER_DB_NAME}

  proxy:
    depends_on:
      - backend
      - frontend
      - stats
    container_name: proxy
    image: nginx:1.25.3
    volumes:
      - "./proxy/default.conf.template:/etc/nginx/templates/default.conf.template"
    environment:
      PROXIED_FRONT_URL: http://${COMMON_HOST}:81
      BACK_PROXY_PASS: http://backend:4000
      FRONT_PROXY_PASS: http://frontend:3000
      STATS_PROXY_PASS: http://stats:8050/
    ports:
      - 80:80
      - 8084:8080

  smart-contract-verifier:
    image: ghcr.io/blockscout/smart-contract-verifier:${DOCKER_TAG_SMART_CONTRACT_VERIFIER:-latest}
    pull_policy: always
    platform: linux/amd64
    restart: always
    container_name: "smart-contract-verifier"
    env_file:
      - ./envs/common-smart-contract-verifier.env
    ports:
      - target: 8050
        published: 8150

  visualizer:
    image: ghcr.io/blockscout/visualizer:${DOCKER_TAG_VISUALIZER:-latest}
    pull_policy: always
    platform: linux/amd64
    restart: always
    container_name: "visualizer"
    env_file:
      - ./envs/common-visualizer.env
    ports:
      - target: 8050
        published: 8152

  sig-provider:
    image: ghcr.io/blockscout/sig-provider:${DOCKER_TAG_SIG_PROVIDER:-latest}
    pull_policy: always
    platform: linux/amd64
    restart: always
    container_name: "sig-provider"
    ports:
      - target: 8050
        published: 8151

  visualizer-proxy:
    container_name: "visualizer-proxy"
    image: nginx:1.25.3
    volumes:
      - "./proxy/visualizer.conf.template:/etc/nginx/templates/default.conf.template"
    environment:
      NGINX_CONFIG_VERSION: 1
      PROXIED_FRONT_URL: http://${COMMON_HOST}
      FRONT_PROXY_PASS: http://visualizer:8050/
    ports:
      - 8083:8081

volumes:
  backend_db_data:
  stats_db_data:
